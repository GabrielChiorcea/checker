@page "/singup"

@using global::Checker.Services
@using global::Checker.Models
@inject FetchService FetchService
@inject IJSRuntime JS
@inject ISessionStorageService sessionStorage

@code{
    private SingUpModel singUpModel = new SingUpModel();

    private async Task HandelSingUp(){    

        try{
            
            var token = await FetchService.SingUpAsyc(singUpModel);
            singUpModel = new SingUpModel();
            Console.WriteLine(token.message);
            await sessionStorage.SetItemAsync("authToken", token.message);
        }
        catch (Exception ex){
            Console.WriteLine("Eroare la autentificare: " + ex.Message);
        }
    }


}  


    <div class="col-lg-6 offset-lg-3" >
    <h1>Intra in cont</h1>
    <div class="row justify-content-center">
        <EditForm  Model="singUpModel" OnValidSubmit="HandelSingUp">
            <DataAnnotationsValidator />

            <div class="mb-3" >
                <label class="form-label" >Username:</label>
                <InputText class="form-control"  @bind-Value="singUpModel.email" />
                <ValidationMessage For="() => singUpModel.email"/>
            </div>

            <div class="mb-3" >
                <label class="form-label" >Password:</label>
                <InputText class="form-control" @bind-Value="singUpModel.password" type="password" />
                <ValidationMessage For="() => singUpModel.password"/>
            </div>

            <button class="btn btn-primary" type="submit">Login</button>

        </EditForm>
    </div>
</div>

