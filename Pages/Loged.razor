@page "/loged"
@inject FetchService FetchService
@inject ISessionStorageService sessionStorage
@inject IDispatcher Dispatcher
@using Fluxor
@inject IState<ProfileCardState> ProfileCardState 

@using Checker.Models
@using Checker.Services
@using Checker.state

<PageTitle>loged</PageTitle>

<h1>You are loged</h1>
  <button type="button" data-mdb-ripple-color="dark" class="btn btn-primary" @onclick="OnInitialized">Primary</button>

<div class="col-md-6">
    <button type="button" class="btn btn-secondary btn-block" @onclick="@(() => getAll())">get</button>
</div>

<div class="col-md-6">
    <button type="button" class="btn btn-secondary btn-block" @onclick="@(() => get())">links</button>
</div>

@code {
    
    private async Task<string> GetToken()
    {
        string retrievedToken = await sessionStorage.GetItemAsync("authToken");
        return retrievedToken;
    }

private async void getAll()
    {
        try
        {
            var token = await GetToken();
            var response = await FetchService.GetResponsSocialCard("http://127.0.0.1:3000/get", token);
            Dispatcher.Dispatch(new GetProfileCardState(response));
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
    private async void get()
    {
        string token = await sessionStorage.GetItemAsync("authToken");
        
        var response = await FetchService.GetResponsSocialLinks("https://backend.gabrielchiorcea.tech/getResponsSocialLinks", token);
        var socialMediaModel = new SocialMediaModel
        {
            FaceBook = response.FaceBook,
            GitHub = response.GitHub,
            Instagram = response.Instagram,
            LinkedIn = response.LinkedIn,
            Twitter = response.Twitter,
            Youtube = response.Youtube
        };
        Dispatcher.Dispatch(new SocialMediaState(
            socialMediaModel.FaceBook,
            socialMediaModel.GitHub,
            socialMediaModel.Instagram,
            socialMediaModel.LinkedIn,
            socialMediaModel.Twitter,
            socialMediaModel.Youtube
        ));
    }


      protected override void OnInitialized()
  {
      Console.WriteLine(ProfileCardState.Value.HomeAddress);
  }  

}